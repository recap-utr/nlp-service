[project]
name = "nlp-service"
version = "2.0.0b2"
description = "Microservice for NLP tasks using gRPC"
authors = [{ name = "Mirko Lenz", email = "mirko@mirkolenz.com" }]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.12"
dependencies = [
    "arg-services>=1,<2",
    "cbrkit[nlp,llm,transformers]>=0.21,<1",
    "typer>=0.9,<1",
]

# [project.optional-dependencies]
# spacy-en-lg = [
#     "en-core-web-lg==3.7.1; sys_platform == 'darwin' and platform_machine == 'x86_64'",
#     "en-core-web-lg==3.8.0; (sys_platform == 'darwin' and platform_machine == 'arm64') or sys_platform == 'linux'",
# ]

[project.scripts]
nlp-service = "nlp_service.server:main"

[project.urls]
Repository = "https://github.com/recap-utr/nlp-service"
Documentation = "https://recap-utr.github.io/nlp-service/"
Issues = "https://github.com/recap-utr/nlp-service/issues"
Changelog = "https://github.com/recap-utr/nlp-service/releases"

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.uv.sources]
# en-core-web-lg = [
#     { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.7.1/en_core_web_lg-3.7.1-py3-none-any.whl", marker = "sys_platform == 'darwin' and platform_machine == 'x86_64'" },
#     { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.8.0/en_core_web_lg-3.8.0-py3-none-any.whl", marker = "(sys_platform == 'darwin' and platform_machine == 'arm64') or sys_platform == 'linux'" },
# ]
